<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.mapper.EmployeeMapper">

    <resultMap id="employeeResultMap" type="com.example.demo.model.Employee">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="role" column="role"/>
        <result property="salary" column="salary"/>

        <!-- JOIN mapping -->
        <association property="appUser" javaType="com.example.demo.model.AppUser">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
        </association>
    </resultMap>

    <select id="findAll" resultMap="employeeResultMap">
        SELECT e.id, e.name, e.role, e.salary,
               u.id AS user_id, u.username, u.email
        FROM employees e
        JOIN app_users u ON e.user_id = u.id;
    </select>

    <select id="findById" parameterType="long" resultMap="employeeResultMap">
        SELECT e.id, e.name, e.role, e.salary,
               u.id AS user_id, u.username, u.email
        FROM employees e
        JOIN app_users u ON e.user_id = u.id
        WHERE e.id = #{id};
    </select>

    <insert id="insert" parameterType="com.example.demo.model.Employee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employees (name, role, salary, user_id)
        VALUES (#{name}, #{role}, #{salary}, #{appUser.id});
    </insert>

    <update id="update" parameterType="com.example.demo.model.Employee">
        UPDATE employees
        SET name=#{name}, role=#{role}, salary=#{salary}, user_id=#{appUser.id}
        WHERE id=#{id};
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM employees WHERE id=#{id};
    </delete>
</mapper>
